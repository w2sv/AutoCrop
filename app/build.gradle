plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'de.mannodermaus.android-junit5'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
}

android {
    def PACKAGE_NAME = "com.w2sv.autocrop"

    compileSdk rootProject.ext.compileSdk
    namespace PACKAGE_NAME

    defaultConfig {
        applicationId PACKAGE_NAME

        minSdk rootProject.ext.minSdk
        targetSdk rootProject.ext.compileSdk
        buildConfigField "int", "MIN_SDK_VERSION", "$minSdkVersion.apiLevel"

        versionCode 41
        versionName '3.2.14'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        testInstrumentationRunnerArguments runnerBuilder: 'de.mannodermaus.junit5.AndroidJUnit5Builder'
    }
    signingConfigs {
        release {
            // create release signingConfig from keystore.properties file, if present
            rootProject.file("keystore.properties").with { file ->
                if (file.exists()) {
                    def keystoreProperties = new Properties()
                    keystoreProperties.load(new FileInputStream(file))

                    storeFile rootProject.file("keys.jks")
                    storePassword keystoreProperties["storePassword"]
                    keyAlias keystoreProperties["keyAlias"]
                    keyPassword keystoreProperties["keyPassword"]
                } else
                    println("WARNING: Failed to create release signing configuration; $file.path not present")
            }
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    testOptions {
        animationsDisabled = true
    }
    buildFeatures {
        viewBinding true
    }
}
dependencies {
    implementation libs.jetbrains.kotlin

    // androidx
    implementation libs.androidx.appcompat
    implementation libs.androidx.core
    implementation libs.androidx.viewmodel
    implementation libs.androidx.viewpager2
    implementation libs.androidx.fragment
    implementation libs.androidx.splashscreen

    // google
    implementation libs.google.guava
    implementation libs.google.material
    implementation libs.google.hilt
    kapt libs.google.hilt.kapt

    // owned
    implementation project(path: ':bidirectionalviewpager')
    implementation project(path: ':permissionhandler')
    implementation libs.kotlinutils
    implementation libs.viewboundcontroller
    implementation libs.androidutils
    implementation libs.typedpreferences
    implementation libs.viewanimations
    implementation libs.onboarder

    // other
    implementation files('libs/processing-core-4.3.0.jar')
    implementation libs.slimber
    implementation libs.snacky
    implementation libs.animatoo
    implementation libs.lottie

    // ---------------
    // unitTest
    testImplementation libs.junit5
    testImplementation libs.androidx.junit

    // ---------------
    // androidTest
    androidTestImplementation libs.junit5.api
    androidTestImplementation libs.junit5.mannodermaus.core
    androidTestRuntimeOnly libs.junit5.mannodermaus.runner
    androidTestImplementation libs.junit5.params

    // espresso
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation libs.androidx.espresso.intents
}