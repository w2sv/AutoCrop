plugins{
    id 'com.android.application'
    id 'kotlin-android'
    id 'de.mannodermaus.android-junit5'
}

// import @loadedProperties from ./utils.gradle
apply from: "$rootDir/utils.gradle"

android {
    signingConfigs {
        // create release signingConfig from keystore.properties file, if present
        release {
            rootProject.file("keystore.properties").with{propertyFile ->
                if (propertyFile.exists()){
                    def keystoreProperties = loadedProperties(propertyFile)

                    storeFile rootProject.file("keys.jks")
                    storePassword keystoreProperties["storePassword"]
                    keyAlias keystoreProperties["keyAlias"]
                    keyPassword keystoreProperties["keyPassword"]
                }
                else
                    println("WARNING: Failed to create release signing configuration; $propertyFile.path not present")
            }
        }
    }

    def MIN_SDK_VERSION = 23
    def COMPILE_SDK_VERSION = 33

    def VERSION_CODE = 22
    def VERSION_NAME = '3.1.3'

    compileSdkVersion COMPILE_SDK_VERSION
    defaultConfig {
        testInstrumentationRunnerArguments runnerBuilder: 'de.mannodermaus.junit5.AndroidJUnit5Builder'
        applicationId 'com.w2sv.autocrop'

        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion COMPILE_SDK_VERSION

        versionCode VERSION_CODE
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "int", "MIN_SDK_VERSION", "$minSdkVersion.apiLevel"
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            debuggable false  // set to true to get logs whilst in release mode
        }
    }
    compileOptions {
        def JAVA_VERSION = JavaVersion.VERSION_11

        sourceCompatibility JAVA_VERSION
        targetCompatibility JAVA_VERSION
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    testOptions {
        animationsDisabled = true
    }
    packagingOptions {
        resources.excludes.add("META-INF/*")  // fixes build error
    }
    buildFeatures {
        viewBinding true
    }
    namespace 'com.w2sv.autocrop'
}

dependencies {
    // -------------APP--------------

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Processing
    implementation files('libs/processing-core.jar')

    // Androidx
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'

    // .enable @lifecycleScope
    implementation 'androidx.fragment:fragment-ktx:1.5.3'
    implementation 'androidx.activity:activity-ktx:1.6.0'

    implementation 'androidx.core:core-splashscreen:1.0.0'

    // Logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Snackbar
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'com.github.matecode:Snacky:1.1.5'

    // Animations
    implementation 'com.github.mohammadatif:Animatoo:master'
    implementation 'com.daimajia.androidanimations:library:2.4@aar'
    implementation 'com.daimajia.easing:library:2.4@aar'

    // Manual Cropping
    implementation project(path: ':croppylib')

    // In-App Review
    implementation 'com.google.android.play:review-ktx:2.0.0'

    // ----------TESTS------------

    def JUNIT_VERSION = "5.8.2"

    // -----------------
    // Unit Tests

    testImplementation "org.junit.jupiter:junit-jupiter:$JUNIT_VERSION"
    testImplementation "androidx.test.ext:junit:1.1.3"

    // -----------------
    // Instrumented Tests

    // 4) Jupiter API & Test Runner, if you don't have it already
    androidTestImplementation "androidx.test:runner:1.4.0"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:$JUNIT_VERSION"

    // 5) The instrumentation test companion libraries
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.3.0"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.3.0"

    // Jupiter Params
    androidTestImplementation "org.junit.jupiter:junit-jupiter-params:$JUNIT_VERSION"

    // Espresso
    def ESPRESSO_VERSION = "3.4.0"

    androidTestImplementation "androidx.test.espresso:espresso-core:$ESPRESSO_VERSION"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$ESPRESSO_VERSION"
}