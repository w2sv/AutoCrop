<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <!-- Permissions
        'requestLegacyExternalStorage=true' effectuates opting out of
         scoped storage for API 29 to enable external storage writing;
         @see
            https://developer.android.com/training/data-storage/use-cases#modify-delete-media
            https://stackoverflow.com/a/65477206/12083276 -->

    <uses-permission
        android:name="android.permission.WRITE_EXTERNAL_STORAGE"
        android:maxSdkVersion="29" />  <!-- implies READ_EXTERNAL_STORAGE; @see https://stackoverflow.com/questions/64221188/write-external-storage-when-targeting-android-10 -->

    <!-- .ScreenshotListening -->

    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" /> <!-- System Permission -> granted automatically -->
    <!-- SDK <= 32 -->
    <uses-permission
        android:name="android.permission.READ_EXTERNAL_STORAGE"
        android:maxSdkVersion="32" />
    <!-- SDK >= 33 -->
    <uses-permission android:name="android.permission.READ_MEDIA_IMAGES" /> <!-- == More granular drop-in for READ_EXTERNAL_STORAGE -->
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />

    <!-- Application -->

    <application
        android:name=".Application"
        android:appCategory="image"
        android:icon="@mipmap/logo"
        android:label="@string/auto_crop"
        android:requestLegacyExternalStorage="true"
        android:roundIcon="@mipmap/logo_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.App.Main"
        tools:replace="android:label">

        <!-- Activities -->

        <activity
            android:name="com.w2sv.autocrop.activities.launch.LauncherActivity"
            android:exported="true"
            android:noHistory="true"
            android:theme="@style/Theme.App.Splash">

            <intent-filter>
                <category android:name="android.intent.category.LAUNCHER" />
                <action android:name="android.intent.action.MAIN" />
            </intent-filter>
        </activity>

        <activity android:name="com.w2sv.autocrop.activities.onboarding.OnboardingActivity" />
        <activity android:name="com.w2sv.autocrop.activities.main.MainActivity" />
        <activity android:name="com.w2sv.autocrop.activities.crop.CropActivity" />
        <activity android:name="com.w2sv.autocrop.activities.examination.ExaminationActivity" />

        <!-- .ScreenshotListening -->

        <!-- ..Services -->

        <service
            android:name="com.w2sv.autocrop.screenshotlistening.ScreenshotListener"
            android:exported="false" />
        <service
            android:name="com.w2sv.autocrop.screenshotlistening.CropIOService"
            android:exported="false" />
        <service
            android:name="com.w2sv.autocrop.screenshotlistening.ScreenshotListener$CleanupService"
            android:exported="false" />

        <!-- ..Receivers -->

        <receiver android:name="com.w2sv.autocrop.screenshotlistening.ScreenshotListener$OnCancelledFromNotificationListener" />
        <receiver
            android:name="com.w2sv.autocrop.activities.main.fragments.flowfield.FlowFieldFragment$CancelledSSLFromNotificationListener"
            tools:ignore="Instantiatable" />

        <!-- ..Activities -->

        <activity
            android:name="com.w2sv.autocrop.screenshotlistening.ScreenshotDeleteRequestActivity"
            android:excludeFromRecents="true"
            android:noHistory="true" />

    </application>
</manifest>